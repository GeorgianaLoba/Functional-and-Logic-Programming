;Define  a  function  that  replaces  one  node  with  another  one  in  a  n-tree
;represented  as:  root list_of_nodes_subtree1... list_of_nodes_subtreen) Eg: tree is
; (a (b (c)) (d) (e (f))) and node 'b' will be replace with node 'g' => tree (a (g (c)) (d) (e (f)))}


(defun myReplace (x el r)
(cond
 ((and (atom x) (equal x el)) r)
 ((atom x) x)
 (t (mapcar #'(lambda (a) (myReplace a el r)) x))
)
)


(print (myReplace '(a b c d b c b) 'b 'z))
(print (myReplace '(a (b (c)) (d) (e (f))) 'b 'g))



